#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.156                       #
#------------------------------------------------------------------------------#


WORKDIR = %cd%

CXX = g++
LD = g++
WINDRES = windres




INC = -ISFML-2.5.1-win32/include
CFLAGS = -std=c++14 -DSFML_STATIC -Wextra -Wall -pedantic
LIBDIR = -LSFML-2.5.1-win32/lib
LIB = -lglu32 -lfreetype -lopengl32 -lgdi32 -lopenal32 -lflac -lvorbisenc -lvorbisfile -lvorbis -logg -lws2_32 -lwinmm
LDFLAGS =
SRCDIR = src

CXX_SRC = $(wildcard $(SRCDIR)/*.cpp)
CXX_OBJ = $(patsubst $(SRCDIR)/%.cpp, %.cpp.o, $(CXX_SRC)) # keep cpp extension in obj filename to avoid conflict with rc object file

RC_SRC = $(wildcard $(SRCDIR)/*.rc)
RC_OBJ = $(patsubst $(SRCDIR)/%.rc, %.rc.o, $(RC_SRC))




CFLAGS_DEBUG = $(CFLAGS) -g
LIB_DEBUG = -lsfml-audio-s-d -lsfml-graphics-s-d -lsfml-window-s-d -lsfml-network-s-d -lsfml-system-s-d $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/win32-debug
BINDIR_DEBUG = bin/win32-debug
BIN_DEBUG = $(BINDIR_DEBUG)/SFMLTetris.exe
CXX_OBJ_DEBUG = $(addprefix $(OBJDIR_DEBUG)/,$(CXX_OBJ))
RC_OBJ_DEBUG = $(addprefix $(OBJDIR_DEBUG)/,$(RC_OBJ))

CFLAGS_RELEASE = $(CFLAGS)
LIB_RELEASE = -lsfml-audio-s -lsfml-graphics-s -lsfml-window-s -lsfml-network-s -lsfml-system-s $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s -mwindows
OBJDIR_RELEASE = obj/win32-release
BINDIR_RELEASE = bin/win32-release
BIN_RELEASE = $(BINDIR_RELEASE)/SFMLTetris.exe
CXX_OBJ_RELEASE = $(addprefix $(OBJDIR_RELEASE)/,$(CXX_OBJ))
RC_OBJ_RELEASE = $(addprefix $(OBJDIR_RELEASE)/,$(RC_OBJ))




clean:
	rm -rf bin
	rm -rf obj




before_debug: 
	mkdir -p $(OBJDIR_DEBUG)

debug: before_debug $(CXX_OBJ_DEBUG) $(RC_OBJ_DEBUG)
	mkdir -p $(BINDIR_DEBUG)
	$(LD) $(LDFLAGS_DEBUG) $(LIBDIR) -o $(BIN_DEBUG) $(CXX_OBJ_DEBUG) $(RC_OBJ_DEBUG) $(LIB_DEBUG)
	cp -r res/win32/* $(BINDIR_DEBUG)
	mkdir -p $(BINDIR_DEBUG)/res
	cp -r res/common/* $(BINDIR_DEBUG)/res

$(OBJDIR_DEBUG)/%.cpp.o: $(SRCDIR)/%.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC) -c $< -o $@
$(OBJDIR_DEBUG)/%.rc.o: $(SRCDIR)/%.rc
	$(WINDRES) -i $< -o $@ -O coff




before_release: 
	mkdir -p $(OBJDIR_RELEASE)

release: before_release $(CXX_OBJ_RELEASE) $(RC_OBJ_RELEASE)
	mkdir -p $(BINDIR_RELEASE)
	$(LD) $(LDFLAGS_RELEASE) $(LIBDIR) -o $(BIN_RELEASE) $(CXX_OBJ_RELEASE) $(RC_OBJ_RELEASE) $(LIB_RELEASE)
	cp -r res/win32/* $(BINDIR_RELEASE)
	mkdir -p $(BINDIR_RELEASE)/res
	cp -r res/common/* $(BINDIR_RELEASE)/res

$(OBJDIR_RELEASE)/%.cpp.o: $(SRCDIR)/%.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC) -c $< -o $@
$(OBJDIR_RELEASE)/%.rc.o: $(SRCDIR)/%.rc
	$(WINDRES) -i $< -o $@ -O coff




archive: release
	rm -f bin/SFMLTetris-win32.zip
	cd $(BINDIR_RELEASE); zip -r ../SFMLTetris-win32.zip *




.PHONY: release
