#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.156                       #
#------------------------------------------------------------------------------#


WORKDIR = %cd%

CXX = g++
LD = g++
WINDRES = windres




INC = -I./SFML-2.1/include
CFLAGS = -std=c++11 -DSFML_STATIC
LIBDIR = -L./SFML-2.1/lib
LIB = -lglu32
LDFLAGS = -mwindows

CXX_SRC = $(wildcard *.cpp)
CXX_OBJ = $(patsubst %.cpp, %.cpp.o, $(CXX_SRC)) # keep cpp extension in obj filename to avoid conflict with rc object file

RC_SRC = $(wildcard *.rc)
RC_OBJ = $(patsubst %.rc, %.rc.o, $(RC_SRC))




CFLAGS_DEBUG = $(CFLAGS) -Wextra -Wall -g
LIB_DEBUG = $(LIB) -lsfml-audio-s-d -lsfml-graphics-s-d -lsfml-window-s-d -lsfml-system-s-d -lsfml-network-s-d
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/debug_w
BINDIR_DEBUG = bin/debug_w
BIN_DEBUG = $(BINDIR_DEBUG)/SFMLTetris_win32.exe
CXX_OBJ_DEBUG = $(addprefix $(OBJDIR_DEBUG)/,$(CXX_OBJ))
RC_OBJ_DEBUG = $(addprefix $(OBJDIR_DEBUG)/,$(RC_OBJ))

CFLAGS_RELEASE = $(CFLAGS)
LIB_RELEASE = $(LIB) -lsfml-audio-s -lsfml-graphics-s -lsfml-window-s -lsfml-system-s -lsfml-network-s
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/release_w
BINDIR_RELEASE = bin/release_w
BIN_RELEASE = $(BINDIR_RELEASE)/SFMLTetris_win32.exe
CXX_OBJ_RELEASE = $(addprefix $(OBJDIR_RELEASE)/,$(CXX_OBJ))
RC_OBJ_RELEASE = $(addprefix $(OBJDIR_RELEASE)/,$(RC_OBJ))




clean:
	rm -rf bin
	rm -rf obj




before_debug: 
	mkdir -p $(BINDIR_DEBUG)
	mkdir -p $(OBJDIR_DEBUG)

debug: before_debug $(CXX_OBJ_DEBUG) $(RC_OBJ_DEBUG)
	$(LD) $(LDFLAGS_DEBUG) $(LIBDIR) -o $(BIN_DEBUG) $(CXX_OBJ_DEBUG) $(RC_OBJ_DEBUG) $(LIB_DEBUG)
	cp -r res/win32/* $(BINDIR_DEBUG)
	mkdir -p $(BINDIR_DEBUG)/res
	cp -r res/common/* $(BINDIR_DEBUG)/res

$(OBJDIR_DEBUG)/%.cpp.o: %.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC) -c $< -o $@
$(OBJDIR_DEBUG)/%.rc.o: %.rc
	$(WINDRES) -i $< -o $@ -O coff




before_release: 
	mkdir -p $(BINDIR_RELEASE)
	mkdir -p $(OBJDIR_RELEASE)

release: before_release $(CXX_OBJ_RELEASE) $(RC_OBJ_RELEASE)
	$(LD) $(LDFLAGS_RELEASE) $(LIBDIR) -o $(BIN_RELEASE) $(CXX_OBJ_RELEASE) $(RC_OBJ_RELEASE) $(LIB_RELEASE)
	cp -r res/win32/* $(BINDIR_RELEASE)
	mkdir -p $(BINDIR_RELEASE)/res
	cp -r res/common/* $(BINDIR_RELEASE)/res

$(OBJDIR_RELEASE)/%.cpp.o: %.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC) -c $< -o $@
$(OBJDIR_RELEASE)/%.rc.o: %.rc
	$(WINDRES) -i $< -o $@ -O coff




.PHONY: release
